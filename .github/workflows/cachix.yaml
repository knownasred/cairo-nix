name: "Cachix Upload"
on:
  pull_request:
  push:
jobs:
  cachix-build:
    strategy:
      matrix:
        system: [x86_64-linux, aarch64-linux, aarch64-darwin, x86_64-darwin]
        isMain:
          - ${{ contains(github.ref, 'main') }}
        # Excluded emulated builds on PRs
        exclude:
          - system: aarch64-linux
            isMain: false
          - system: x86_64-darwin
            isMain: false
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v25
      - uses: cachix/cachix-action@v14
        with:
          name: dojo-nix
          # If you chose API tokens for write access OR if you have a private cache
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
          skipPush: true
      - name: Omnix CI
        run: |
          nix run github:juspay/omnix -- ci \
            --extra-access-tokens ${{ secrets.GITHUB_TOKEN }} \
            run \
              --systems "${{ matrix.system }}" \
              --results=$HOME/omci.json
      # Push the Nix cache
      - name: Push to cachix
        env:
          CACHIX_AUTH_TOKEN: ${{ secrets.CACHIX_AUTH_TOKEN }}
          BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
        if: env.BRANCH_NAME == 'main'
        run: |
          nix run github:juspay/cachix-push -- \
            --cache dojo-nix \
            < $HOME/omci.json
